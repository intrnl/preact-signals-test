{
  "version": 3,
  "sources": ["../../node_modules/.pnpm/preact@10.10.6/node_modules/preact/src/constants.js", "../../node_modules/.pnpm/preact@10.10.6/node_modules/preact/src/util.js", "../../node_modules/.pnpm/preact@10.10.6/node_modules/preact/src/options.js", "../../node_modules/.pnpm/preact@10.10.6/node_modules/preact/src/create-element.js", "../../node_modules/.pnpm/preact@10.10.6/node_modules/preact/src/component.js", "../../node_modules/.pnpm/preact@10.10.6/node_modules/preact/src/create-context.js", "../../node_modules/.pnpm/preact@10.10.6/node_modules/preact/src/diff/children.js", "../../node_modules/.pnpm/preact@10.10.6/node_modules/preact/src/diff/props.js", "../../node_modules/.pnpm/preact@10.10.6/node_modules/preact/src/diff/index.js", "../../node_modules/.pnpm/preact@10.10.6/node_modules/preact/src/render.js", "../../node_modules/.pnpm/preact@10.10.6/node_modules/preact/src/clone-element.js", "../../node_modules/.pnpm/preact@10.10.6/node_modules/preact/src/diff/catch-error.js", "../../node_modules/.pnpm/@preact+signals-core@1.0.0/node_modules/@preact/signals-core/src/index.ts", "../../node_modules/.pnpm/@preact+signals@1.0.1_vqix5dthtzzhgmqkmfphan5w6u_preact@10.10.6/node_modules/@preact/signals/src/index.ts", "../../node_modules/.pnpm/preact@10.10.6/node_modules/preact/jsx-runtime/src/index.js", "../../src/app.jsx"],
  "sourcesContent": ["export const EMPTY_OBJ = {};\nexport const EMPTY_ARR = [];\nexport const IS_NON_DIMENSIONAL = /acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i;\n", "import { EMPTY_ARR } from \"./constants\";\n\n/**\n * Assign properties from `props` to `obj`\n * @template O, P The obj and props types\n * @param {O} obj The object to copy properties to\n * @param {P} props The object to copy properties from\n * @returns {O & P}\n */\nexport function assign(obj, props) {\n\t// @ts-ignore We change the type of `obj` to be `O & P`\n\tfor (let i in props) obj[i] = props[i];\n\treturn /** @type {O & P} */ (obj);\n}\n\n/**\n * Remove a child node from its parent if attached. This is a workaround for\n * IE11 which doesn't support `Element.prototype.remove()`. Using this function\n * is smaller than including a dedicated polyfill.\n * @param {Node} node The node to remove\n */\nexport function removeNode(node) {\n\tlet parentNode = node.parentNode;\n\tif (parentNode) parentNode.removeChild(node);\n}\n\nexport const slice = EMPTY_ARR.slice;\n", "import { _catchError } from './diff/catch-error';\n\n/**\n * The `option` object can potentially contain callback functions\n * that are called during various stages of our renderer. This is the\n * foundation on which all our addons like `preact/debug`, `preact/compat`,\n * and `preact/hooks` are based on. See the `Options` type in `internal.d.ts`\n * for a full list of available option hooks (most editors/IDEs allow you to\n * ctrl+click or cmd+click on mac the type definition below).\n * @type {import('./internal').Options}\n */\nconst options = {\n\t_catchError\n};\n\nexport default options;\n", "import { slice } from './util';\nimport options from './options';\n\nlet vnodeId = 0;\n\n/**\n * Create an virtual node (used for JSX)\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component\n * constructor for this virtual node\n * @param {object | null | undefined} [props] The properties of the virtual node\n * @param {Array<import('.').ComponentChildren>} [children] The children of the virtual node\n * @returns {import('./internal').VNode}\n */\nexport function createElement(type, props, children) {\n\tlet normalizedProps = {},\n\t\tkey,\n\t\tref,\n\t\ti;\n\tfor (i in props) {\n\t\tif (i == 'key') key = props[i];\n\t\telse if (i == 'ref') ref = props[i];\n\t\telse normalizedProps[i] = props[i];\n\t}\n\n\tif (arguments.length > 2) {\n\t\tnormalizedProps.children =\n\t\t\targuments.length > 3 ? slice.call(arguments, 2) : children;\n\t}\n\n\t// If a Component VNode, check for and apply defaultProps\n\t// Note: type may be undefined in development, must never error here.\n\tif (typeof type == 'function' && type.defaultProps != null) {\n\t\tfor (i in type.defaultProps) {\n\t\t\tif (normalizedProps[i] === undefined) {\n\t\t\t\tnormalizedProps[i] = type.defaultProps[i];\n\t\t\t}\n\t\t}\n\t}\n\n\treturn createVNode(type, normalizedProps, key, ref, null);\n}\n\n/**\n * Create a VNode (used internally by Preact)\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component\n * Constructor for this virtual node\n * @param {object | string | number | null} props The properties of this virtual node.\n * If this virtual node represents a text node, this is the text of the node (string or number).\n * @param {string | number | null} key The key for this virtual node, used when\n * diffing it against its children\n * @param {import('./internal').VNode[\"ref\"]} ref The ref property that will\n * receive a reference to its created child\n * @returns {import('./internal').VNode}\n */\nexport function createVNode(type, props, key, ref, original) {\n\t// V8 seems to be better at detecting type shapes if the object is allocated from the same call site\n\t// Do not inline into createElement and coerceToVNode!\n\tconst vnode = {\n\t\ttype,\n\t\tprops,\n\t\tkey,\n\t\tref,\n\t\t_children: null,\n\t\t_parent: null,\n\t\t_depth: 0,\n\t\t_dom: null,\n\t\t// _nextDom must be initialized to undefined b/c it will eventually\n\t\t// be set to dom.nextSibling which can return `null` and it is important\n\t\t// to be able to distinguish between an uninitialized _nextDom and\n\t\t// a _nextDom that has been set to `null`\n\t\t_nextDom: undefined,\n\t\t_component: null,\n\t\t_hydrating: null,\n\t\tconstructor: undefined,\n\t\t_original: original == null ? ++vnodeId : original\n\t};\n\n\t// Only invoke the vnode hook if this was *not* a direct copy:\n\tif (original == null && options.vnode != null) options.vnode(vnode);\n\n\treturn vnode;\n}\n\nexport function createRef() {\n\treturn { current: null };\n}\n\nexport function Fragment(props) {\n\treturn props.children;\n}\n\n/**\n * Check if a the argument is a valid Preact VNode.\n * @param {*} vnode\n * @returns {vnode is import('./internal').VNode}\n */\nexport const isValidElement = vnode =>\n\tvnode != null && vnode.constructor === undefined;\n", "import { assign } from './util';\nimport { diff, commitRoot } from './diff/index';\nimport options from './options';\nimport { Fragment } from './create-element';\n\n/**\n * Base Component class. Provides `setState()` and `forceUpdate()`, which\n * trigger rendering\n * @param {object} props The initial component props\n * @param {object} context The initial context from parent components'\n * getChildContext\n */\nexport function Component(props, context) {\n\tthis.props = props;\n\tthis.context = context;\n}\n\n/**\n * Update component state and schedule a re-render.\n * @this {import('./internal').Component}\n * @param {object | ((s: object, p: object) => object)} update A hash of state\n * properties to update with new values or a function that given the current\n * state and props returns a new partial state\n * @param {() => void} [callback] A function to be called once component state is\n * updated\n */\nComponent.prototype.setState = function(update, callback) {\n\t// only clone state when copying to nextState the first time.\n\tlet s;\n\tif (this._nextState != null && this._nextState !== this.state) {\n\t\ts = this._nextState;\n\t} else {\n\t\ts = this._nextState = assign({}, this.state);\n\t}\n\n\tif (typeof update == 'function') {\n\t\t// Some libraries like `immer` mark the current state as readonly,\n\t\t// preventing us from mutating it, so we need to clone it. See #2716\n\t\tupdate = update(assign({}, s), this.props);\n\t}\n\n\tif (update) {\n\t\tassign(s, update);\n\t}\n\n\t// Skip update if updater function returned null\n\tif (update == null) return;\n\n\tif (this._vnode) {\n\t\tif (callback) this._renderCallbacks.push(callback);\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Immediately perform a synchronous re-render of the component\n * @this {import('./internal').Component}\n * @param {() => void} [callback] A function to be called after component is\n * re-rendered\n */\nComponent.prototype.forceUpdate = function(callback) {\n\tif (this._vnode) {\n\t\t// Set render mode so that we can differentiate where the render request\n\t\t// is coming from. We need this because forceUpdate should never call\n\t\t// shouldComponentUpdate\n\t\tthis._force = true;\n\t\tif (callback) this._renderCallbacks.push(callback);\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Accepts `props` and `state`, and returns a new Virtual DOM tree to build.\n * Virtual DOM is generally constructed via [JSX](http://jasonformat.com/wtf-is-jsx).\n * @param {object} props Props (eg: JSX attributes) received from parent\n * element/component\n * @param {object} state The component's current state\n * @param {object} context Context object, as returned by the nearest\n * ancestor's `getChildContext()`\n * @returns {import('./index').ComponentChildren | void}\n */\nComponent.prototype.render = Fragment;\n\n/**\n * @param {import('./internal').VNode} vnode\n * @param {number | null} [childIndex]\n */\nexport function getDomSibling(vnode, childIndex) {\n\tif (childIndex == null) {\n\t\t// Use childIndex==null as a signal to resume the search from the vnode's sibling\n\t\treturn vnode._parent\n\t\t\t? getDomSibling(vnode._parent, vnode._parent._children.indexOf(vnode) + 1)\n\t\t\t: null;\n\t}\n\n\tlet sibling;\n\tfor (; childIndex < vnode._children.length; childIndex++) {\n\t\tsibling = vnode._children[childIndex];\n\n\t\tif (sibling != null && sibling._dom != null) {\n\t\t\t// Since updateParentDomPointers keeps _dom pointer correct,\n\t\t\t// we can rely on _dom to tell us if this subtree contains a\n\t\t\t// rendered DOM node, and what the first rendered DOM node is\n\t\t\treturn sibling._dom;\n\t\t}\n\t}\n\n\t// If we get here, we have not found a DOM node in this vnode's children.\n\t// We must resume from this vnode's sibling (in it's parent _children array)\n\t// Only climb up and search the parent if we aren't searching through a DOM\n\t// VNode (meaning we reached the DOM parent of the original vnode that began\n\t// the search)\n\treturn typeof vnode.type == 'function' ? getDomSibling(vnode) : null;\n}\n\n/**\n * Trigger in-place re-rendering of a component.\n * @param {import('./internal').Component} component The component to rerender\n */\nfunction renderComponent(component) {\n\tlet vnode = component._vnode,\n\t\toldDom = vnode._dom,\n\t\tparentDom = component._parentDom;\n\n\tif (parentDom) {\n\t\tlet commitQueue = [];\n\t\tconst oldVNode = assign({}, vnode);\n\t\toldVNode._original = vnode._original + 1;\n\n\t\tdiff(\n\t\t\tparentDom,\n\t\t\tvnode,\n\t\t\toldVNode,\n\t\t\tcomponent._globalContext,\n\t\t\tparentDom.ownerSVGElement !== undefined,\n\t\t\tvnode._hydrating != null ? [oldDom] : null,\n\t\t\tcommitQueue,\n\t\t\toldDom == null ? getDomSibling(vnode) : oldDom,\n\t\t\tvnode._hydrating\n\t\t);\n\t\tcommitRoot(commitQueue, vnode);\n\n\t\tif (vnode._dom != oldDom) {\n\t\t\tupdateParentDomPointers(vnode);\n\t\t}\n\t}\n}\n\n/**\n * @param {import('./internal').VNode} vnode\n */\nfunction updateParentDomPointers(vnode) {\n\tif ((vnode = vnode._parent) != null && vnode._component != null) {\n\t\tvnode._dom = vnode._component.base = null;\n\t\tfor (let i = 0; i < vnode._children.length; i++) {\n\t\t\tlet child = vnode._children[i];\n\t\t\tif (child != null && child._dom != null) {\n\t\t\t\tvnode._dom = vnode._component.base = child._dom;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn updateParentDomPointers(vnode);\n\t}\n}\n\n/**\n * The render queue\n * @type {Array<import('./internal').Component>}\n */\nlet rerenderQueue = [];\n\n/*\n * The value of `Component.debounce` must asynchronously invoke the passed in callback. It is\n * important that contributors to Preact can consistently reason about what calls to `setState`, etc.\n * do, and when their effects will be applied. See the links below for some further reading on designing\n * asynchronous APIs.\n * * [Designing APIs for Asynchrony](https://blog.izs.me/2013/08/designing-apis-for-asynchrony)\n * * [Callbacks synchronous and asynchronous](https://blog.ometer.com/2011/07/24/callbacks-synchronous-and-asynchronous/)\n */\n\nlet prevDebounce;\n\n/**\n * Enqueue a rerender of a component\n * @param {import('./internal').Component} c The component to rerender\n */\nexport function enqueueRender(c) {\n\tif (\n\t\t(!c._dirty &&\n\t\t\t(c._dirty = true) &&\n\t\t\trerenderQueue.push(c) &&\n\t\t\t!process._rerenderCount++) ||\n\t\tprevDebounce !== options.debounceRendering\n\t) {\n\t\tprevDebounce = options.debounceRendering;\n\t\t(prevDebounce || setTimeout)(process);\n\t}\n}\n\n/** Flush the render queue by rerendering all queued components */\nfunction process() {\n\tlet queue;\n\twhile ((process._rerenderCount = rerenderQueue.length)) {\n\t\tqueue = rerenderQueue.sort((a, b) => a._vnode._depth - b._vnode._depth);\n\t\trerenderQueue = [];\n\t\t// Don't update `renderCount` yet. Keep its value non-zero to prevent unnecessary\n\t\t// process() calls from getting scheduled while `queue` is still being consumed.\n\t\tqueue.some(c => {\n\t\t\tif (c._dirty) renderComponent(c);\n\t\t});\n\t}\n}\nprocess._rerenderCount = 0;\n", "import { enqueueRender } from './component';\n\nexport let i = 0;\n\nexport function createContext(defaultValue, contextId) {\n\tcontextId = '__cC' + i++;\n\n\tconst context = {\n\t\t_id: contextId,\n\t\t_defaultValue: defaultValue,\n\t\t/** @type {import('./internal').FunctionComponent} */\n\t\tConsumer(props, contextValue) {\n\t\t\t// return props.children(\n\t\t\t// \tcontext[contextId] ? context[contextId].props.value : defaultValue\n\t\t\t// );\n\t\t\treturn props.children(contextValue);\n\t\t},\n\t\t/** @type {import('./internal').FunctionComponent} */\n\t\tProvider(props) {\n\t\t\tif (!this.getChildContext) {\n\t\t\t\tlet subs = [];\n\t\t\t\tlet ctx = {};\n\t\t\t\tctx[contextId] = this;\n\n\t\t\t\tthis.getChildContext = () => ctx;\n\n\t\t\t\tthis.shouldComponentUpdate = function(_props) {\n\t\t\t\t\tif (this.props.value !== _props.value) {\n\t\t\t\t\t\t// I think the forced value propagation here was only needed when `options.debounceRendering` was being bypassed:\n\t\t\t\t\t\t// https://github.com/preactjs/preact/commit/4d339fb803bea09e9f198abf38ca1bf8ea4b7771#diff-54682ce380935a717e41b8bfc54737f6R358\n\t\t\t\t\t\t// In those cases though, even with the value corrected, we're double-rendering all nodes.\n\t\t\t\t\t\t// It might be better to just tell folks not to use force-sync mode.\n\t\t\t\t\t\t// Currently, using `useContext()` in a class component will overwrite its `this.context` value.\n\t\t\t\t\t\t// subs.some(c => {\n\t\t\t\t\t\t// \tc.context = _props.value;\n\t\t\t\t\t\t// \tenqueueRender(c);\n\t\t\t\t\t\t// });\n\n\t\t\t\t\t\t// subs.some(c => {\n\t\t\t\t\t\t// \tc.context[contextId] = _props.value;\n\t\t\t\t\t\t// \tenqueueRender(c);\n\t\t\t\t\t\t// });\n\t\t\t\t\t\tsubs.some(enqueueRender);\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tthis.sub = c => {\n\t\t\t\t\tsubs.push(c);\n\t\t\t\t\tlet old = c.componentWillUnmount;\n\t\t\t\t\tc.componentWillUnmount = () => {\n\t\t\t\t\t\tsubs.splice(subs.indexOf(c), 1);\n\t\t\t\t\t\tif (old) old.call(c);\n\t\t\t\t\t};\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn props.children;\n\t\t}\n\t};\n\n\t// Devtools needs access to the context object when it\n\t// encounters a Provider. This is necessary to support\n\t// setting `displayName` on the context object instead\n\t// of on the component itself. See:\n\t// https://reactjs.org/docs/context.html#contextdisplayname\n\n\treturn (context.Provider._contextRef = context.Consumer.contextType = context);\n}\n", "import { diff, unmount, applyRef } from './index';\nimport { createVNode, Fragment } from '../create-element';\nimport { EMPTY_OBJ, EMPTY_ARR } from '../constants';\nimport { getDomSibling } from '../component';\n\n/**\n * Diff the children of a virtual node\n * @param {import('../internal').PreactElement} parentDom The DOM element whose\n * children are being diffed\n * @param {import('../internal').ComponentChildren[]} renderResult\n * @param {import('../internal').VNode} newParentVNode The new virtual\n * node whose children should be diff'ed against oldParentVNode\n * @param {import('../internal').VNode} oldParentVNode The old virtual\n * node whose children should be diff'ed against newParentVNode\n * @param {object} globalContext The current context object - modified by getChildContext\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node\n * @param {Array<import('../internal').PreactElement>} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {import('../internal').PreactElement} oldDom The current attached DOM\n * element any new dom elements should be placed around. Likely `null` on first\n * render (except when hydrating). Can be a sibling DOM element when diffing\n * Fragments that have siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} isHydrating Whether or not we are in hydration\n */\nexport function diffChildren(\n\tparentDom,\n\trenderResult,\n\tnewParentVNode,\n\toldParentVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\toldDom,\n\tisHydrating\n) {\n\tlet i, j, oldVNode, childVNode, newDom, firstChildDom, refs;\n\n\t// This is a compression of oldParentVNode!=null && oldParentVNode != EMPTY_OBJ && oldParentVNode._children || EMPTY_ARR\n\t// as EMPTY_OBJ._children should be `undefined`.\n\tlet oldChildren = (oldParentVNode && oldParentVNode._children) || EMPTY_ARR;\n\n\tlet oldChildrenLength = oldChildren.length;\n\n\tnewParentVNode._children = [];\n\tfor (i = 0; i < renderResult.length; i++) {\n\t\tchildVNode = renderResult[i];\n\n\t\tif (childVNode == null || typeof childVNode == 'boolean') {\n\t\t\tchildVNode = newParentVNode._children[i] = null;\n\t\t}\n\t\t// If this newVNode is being reused (e.g. <div>{reuse}{reuse}</div>) in the same diff,\n\t\t// or we are rendering a component (e.g. setState) copy the oldVNodes so it can have\n\t\t// it's own DOM & etc. pointers\n\t\telse if (\n\t\t\ttypeof childVNode == 'string' ||\n\t\t\ttypeof childVNode == 'number' ||\n\t\t\t// eslint-disable-next-line valid-typeof\n\t\t\ttypeof childVNode == 'bigint'\n\t\t) {\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tnull,\n\t\t\t\tchildVNode,\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tchildVNode\n\t\t\t);\n\t\t} else if (Array.isArray(childVNode)) {\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tFragment,\n\t\t\t\t{ children: childVNode },\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tnull\n\t\t\t);\n\t\t} else if (childVNode._depth > 0) {\n\t\t\t// VNode is already in use, clone it. This can happen in the following\n\t\t\t// scenario:\n\t\t\t//   const reuse = <div />\n\t\t\t//   <div>{reuse}<span />{reuse}</div>\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tchildVNode.type,\n\t\t\t\tchildVNode.props,\n\t\t\t\tchildVNode.key,\n\t\t\t\tnull,\n\t\t\t\tchildVNode._original\n\t\t\t);\n\t\t} else {\n\t\t\tchildVNode = newParentVNode._children[i] = childVNode;\n\t\t}\n\n\t\t// Terser removes the `continue` here and wraps the loop body\n\t\t// in a `if (childVNode) { ... } condition\n\t\tif (childVNode == null) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tchildVNode._parent = newParentVNode;\n\t\tchildVNode._depth = newParentVNode._depth + 1;\n\n\t\t// Check if we find a corresponding element in oldChildren.\n\t\t// If found, delete the array item by setting to `undefined`.\n\t\t// We use `undefined`, as `null` is reserved for empty placeholders\n\t\t// (holes).\n\t\toldVNode = oldChildren[i];\n\n\t\tif (\n\t\t\toldVNode === null ||\n\t\t\t(oldVNode &&\n\t\t\t\tchildVNode.key == oldVNode.key &&\n\t\t\t\tchildVNode.type === oldVNode.type)\n\t\t) {\n\t\t\toldChildren[i] = undefined;\n\t\t} else {\n\t\t\t// Either oldVNode === undefined or oldChildrenLength > 0,\n\t\t\t// so after this loop oldVNode == null or oldVNode is a valid value.\n\t\t\tfor (j = 0; j < oldChildrenLength; j++) {\n\t\t\t\toldVNode = oldChildren[j];\n\t\t\t\t// If childVNode is unkeyed, we only match similarly unkeyed nodes, otherwise we match by key.\n\t\t\t\t// We always match by type (in either case).\n\t\t\t\tif (\n\t\t\t\t\toldVNode &&\n\t\t\t\t\tchildVNode.key == oldVNode.key &&\n\t\t\t\t\tchildVNode.type === oldVNode.type\n\t\t\t\t) {\n\t\t\t\t\toldChildren[j] = undefined;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\toldVNode = null;\n\t\t\t}\n\t\t}\n\n\t\toldVNode = oldVNode || EMPTY_OBJ;\n\n\t\t// Morph the old element into the new one, but don't append it to the dom yet\n\t\tdiff(\n\t\t\tparentDom,\n\t\t\tchildVNode,\n\t\t\toldVNode,\n\t\t\tglobalContext,\n\t\t\tisSvg,\n\t\t\texcessDomChildren,\n\t\t\tcommitQueue,\n\t\t\toldDom,\n\t\t\tisHydrating\n\t\t);\n\n\t\tnewDom = childVNode._dom;\n\n\t\tif ((j = childVNode.ref) && oldVNode.ref != j) {\n\t\t\tif (!refs) refs = [];\n\t\t\tif (oldVNode.ref) refs.push(oldVNode.ref, null, childVNode);\n\t\t\trefs.push(j, childVNode._component || newDom, childVNode);\n\t\t}\n\n\t\tif (newDom != null) {\n\t\t\tif (firstChildDom == null) {\n\t\t\t\tfirstChildDom = newDom;\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\ttypeof childVNode.type == 'function' &&\n\t\t\t\tchildVNode._children === oldVNode._children\n\t\t\t) {\n\t\t\t\tchildVNode._nextDom = oldDom = reorderChildren(\n\t\t\t\t\tchildVNode,\n\t\t\t\t\toldDom,\n\t\t\t\t\tparentDom\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\toldDom = placeChild(\n\t\t\t\t\tparentDom,\n\t\t\t\t\tchildVNode,\n\t\t\t\t\toldVNode,\n\t\t\t\t\toldChildren,\n\t\t\t\t\tnewDom,\n\t\t\t\t\toldDom\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (typeof newParentVNode.type == 'function') {\n\t\t\t\t// Because the newParentVNode is Fragment-like, we need to set it's\n\t\t\t\t// _nextDom property to the nextSibling of its last child DOM node.\n\t\t\t\t//\n\t\t\t\t// `oldDom` contains the correct value here because if the last child\n\t\t\t\t// is a Fragment-like, then oldDom has already been set to that child's _nextDom.\n\t\t\t\t// If the last child is a DOM VNode, then oldDom will be set to that DOM\n\t\t\t\t// node's nextSibling.\n\t\t\t\tnewParentVNode._nextDom = oldDom;\n\t\t\t}\n\t\t} else if (\n\t\t\toldDom &&\n\t\t\toldVNode._dom == oldDom &&\n\t\t\toldDom.parentNode != parentDom\n\t\t) {\n\t\t\t// The above condition is to handle null placeholders. See test in placeholder.test.js:\n\t\t\t// `efficiently replace null placeholders in parent rerenders`\n\t\t\toldDom = getDomSibling(oldVNode);\n\t\t}\n\t}\n\n\tnewParentVNode._dom = firstChildDom;\n\n\t// Remove remaining oldChildren if there are any.\n\tfor (i = oldChildrenLength; i--; ) {\n\t\tif (oldChildren[i] != null) {\n\t\t\tif (\n\t\t\t\ttypeof newParentVNode.type == 'function' &&\n\t\t\t\toldChildren[i]._dom != null &&\n\t\t\t\toldChildren[i]._dom == newParentVNode._nextDom\n\t\t\t) {\n\t\t\t\t// If the newParentVNode.__nextDom points to a dom node that is about to\n\t\t\t\t// be unmounted, then get the next sibling of that vnode and set\n\t\t\t\t// _nextDom to it\n\t\t\t\tnewParentVNode._nextDom = getDomSibling(oldParentVNode, i + 1);\n\t\t\t}\n\n\t\t\tunmount(oldChildren[i], oldChildren[i]);\n\t\t}\n\t}\n\n\t// Set refs only after unmount\n\tif (refs) {\n\t\tfor (i = 0; i < refs.length; i++) {\n\t\t\tapplyRef(refs[i], refs[++i], refs[++i]);\n\t\t}\n\t}\n}\n\nfunction reorderChildren(childVNode, oldDom, parentDom) {\n\t// Note: VNodes in nested suspended trees may be missing _children.\n\tlet c = childVNode._children;\n\tlet tmp = 0;\n\tfor (; c && tmp < c.length; tmp++) {\n\t\tlet vnode = c[tmp];\n\t\tif (vnode) {\n\t\t\t// We typically enter this code path on sCU bailout, where we copy\n\t\t\t// oldVNode._children to newVNode._children. If that is the case, we need\n\t\t\t// to update the old children's _parent pointer to point to the newVNode\n\t\t\t// (childVNode here).\n\t\t\tvnode._parent = childVNode;\n\n\t\t\tif (typeof vnode.type == 'function') {\n\t\t\t\toldDom = reorderChildren(vnode, oldDom, parentDom);\n\t\t\t} else {\n\t\t\t\toldDom = placeChild(\n\t\t\t\t\tparentDom,\n\t\t\t\t\tvnode,\n\t\t\t\t\tvnode,\n\t\t\t\t\tc,\n\t\t\t\t\tvnode._dom,\n\t\t\t\t\toldDom\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn oldDom;\n}\n\n/**\n * Flatten and loop through the children of a virtual node\n * @param {import('../index').ComponentChildren} children The unflattened\n * children of a virtual node\n * @returns {import('../internal').VNode[]}\n */\nexport function toChildArray(children, out) {\n\tout = out || [];\n\tif (children == null || typeof children == 'boolean') {\n\t} else if (Array.isArray(children)) {\n\t\tchildren.some(child => {\n\t\t\ttoChildArray(child, out);\n\t\t});\n\t} else {\n\t\tout.push(children);\n\t}\n\treturn out;\n}\n\nfunction placeChild(\n\tparentDom,\n\tchildVNode,\n\toldVNode,\n\toldChildren,\n\tnewDom,\n\toldDom\n) {\n\tlet nextDom;\n\tif (childVNode._nextDom !== undefined) {\n\t\t// Only Fragments or components that return Fragment like VNodes will\n\t\t// have a non-undefined _nextDom. Continue the diff from the sibling\n\t\t// of last DOM child of this child VNode\n\t\tnextDom = childVNode._nextDom;\n\n\t\t// Eagerly cleanup _nextDom. We don't need to persist the value because\n\t\t// it is only used by `diffChildren` to determine where to resume the diff after\n\t\t// diffing Components and Fragments. Once we store it the nextDOM local var, we\n\t\t// can clean up the property\n\t\tchildVNode._nextDom = undefined;\n\t} else if (\n\t\toldVNode == null ||\n\t\tnewDom != oldDom ||\n\t\tnewDom.parentNode == null\n\t) {\n\t\touter: if (oldDom == null || oldDom.parentNode !== parentDom) {\n\t\t\tparentDom.appendChild(newDom);\n\t\t\tnextDom = null;\n\t\t} else {\n\t\t\t// `j<oldChildrenLength; j+=2` is an alternative to `j++<oldChildrenLength/2`\n\t\t\tfor (\n\t\t\t\tlet sibDom = oldDom, j = 0;\n\t\t\t\t(sibDom = sibDom.nextSibling) && j < oldChildren.length;\n\t\t\t\tj += 2\n\t\t\t) {\n\t\t\t\tif (sibDom == newDom) {\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t}\n\t\t\tparentDom.insertBefore(newDom, oldDom);\n\t\t\tnextDom = oldDom;\n\t\t}\n\t}\n\n\t// If we have pre-calculated the nextDOM node, use it. Else calculate it now\n\t// Strictly check for `undefined` here cuz `null` is a valid value of `nextDom`.\n\t// See more detail in create-element.js:createVNode\n\tif (nextDom !== undefined) {\n\t\toldDom = nextDom;\n\t} else {\n\t\toldDom = newDom.nextSibling;\n\t}\n\n\treturn oldDom;\n}\n", "import { IS_NON_DIMENSIONAL } from '../constants';\nimport options from '../options';\n\n/**\n * Diff the old and new properties of a VNode and apply changes to the DOM node\n * @param {import('../internal').PreactElement} dom The DOM node to apply\n * changes to\n * @param {object} newProps The new props\n * @param {object} oldProps The old props\n * @param {boolean} isSvg Whether or not this node is an SVG node\n * @param {boolean} hydrate Whether or not we are in hydration mode\n */\nexport function diffProps(dom, newProps, oldProps, isSvg, hydrate) {\n\tlet i;\n\n\tfor (i in oldProps) {\n\t\tif (i !== 'children' && i !== 'key' && !(i in newProps)) {\n\t\t\tsetProperty(dom, i, null, oldProps[i], isSvg);\n\t\t}\n\t}\n\n\tfor (i in newProps) {\n\t\tif (\n\t\t\t(!hydrate || typeof newProps[i] == 'function') &&\n\t\t\ti !== 'children' &&\n\t\t\ti !== 'key' &&\n\t\t\ti !== 'value' &&\n\t\t\ti !== 'checked' &&\n\t\t\toldProps[i] !== newProps[i]\n\t\t) {\n\t\t\tsetProperty(dom, i, newProps[i], oldProps[i], isSvg);\n\t\t}\n\t}\n}\n\nfunction setStyle(style, key, value) {\n\tif (key[0] === '-') {\n\t\tstyle.setProperty(key, value);\n\t} else if (value == null) {\n\t\tstyle[key] = '';\n\t} else if (typeof value != 'number' || IS_NON_DIMENSIONAL.test(key)) {\n\t\tstyle[key] = value;\n\t} else {\n\t\tstyle[key] = value + 'px';\n\t}\n}\n\n/**\n * Set a property value on a DOM node\n * @param {import('../internal').PreactElement} dom The DOM node to modify\n * @param {string} name The name of the property to set\n * @param {*} value The value to set the property to\n * @param {*} oldValue The old value the property had\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node or not\n */\nexport function setProperty(dom, name, value, oldValue, isSvg) {\n\tlet useCapture;\n\n\to: if (name === 'style') {\n\t\tif (typeof value == 'string') {\n\t\t\tdom.style.cssText = value;\n\t\t} else {\n\t\t\tif (typeof oldValue == 'string') {\n\t\t\t\tdom.style.cssText = oldValue = '';\n\t\t\t}\n\n\t\t\tif (oldValue) {\n\t\t\t\tfor (name in oldValue) {\n\t\t\t\t\tif (!(value && name in value)) {\n\t\t\t\t\t\tsetStyle(dom.style, name, '');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (value) {\n\t\t\t\tfor (name in value) {\n\t\t\t\t\tif (!oldValue || value[name] !== oldValue[name]) {\n\t\t\t\t\t\tsetStyle(dom.style, name, value[name]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t// Benchmark for comparison: https://esbench.com/bench/574c954bdb965b9a00965ac6\n\telse if (name[0] === 'o' && name[1] === 'n') {\n\t\tuseCapture = name !== (name = name.replace(/Capture$/, ''));\n\n\t\t// Infer correct casing for DOM built-in events:\n\t\tif (name.toLowerCase() in dom) name = name.toLowerCase().slice(2);\n\t\telse name = name.slice(2);\n\n\t\tif (!dom._listeners) dom._listeners = {};\n\t\tdom._listeners[name + useCapture] = value;\n\n\t\tif (value) {\n\t\t\tif (!oldValue) {\n\t\t\t\tconst handler = useCapture ? eventProxyCapture : eventProxy;\n\t\t\t\tdom.addEventListener(name, handler, useCapture);\n\t\t\t}\n\t\t} else {\n\t\t\tconst handler = useCapture ? eventProxyCapture : eventProxy;\n\t\t\tdom.removeEventListener(name, handler, useCapture);\n\t\t}\n\t} else if (name !== 'dangerouslySetInnerHTML') {\n\t\tif (isSvg) {\n\t\t\t// Normalize incorrect prop usage for SVG:\n\t\t\t// - xlink:href / xlinkHref --> href (xlink:href was removed from SVG and isn't needed)\n\t\t\t// - className --> class\n\t\t\tname = name.replace(/xlink(H|:h)/, 'h').replace(/sName$/, 's');\n\t\t} else if (\n\t\t\tname !== 'href' &&\n\t\t\tname !== 'list' &&\n\t\t\tname !== 'form' &&\n\t\t\t// Default value in browsers is `-1` and an empty string is\n\t\t\t// cast to `0` instead\n\t\t\tname !== 'tabIndex' &&\n\t\t\tname !== 'download' &&\n\t\t\tname in dom\n\t\t) {\n\t\t\ttry {\n\t\t\t\tdom[name] = value == null ? '' : value;\n\t\t\t\t// labelled break is 1b smaller here than a return statement (sorry)\n\t\t\t\tbreak o;\n\t\t\t} catch (e) {}\n\t\t}\n\n\t\t// ARIA-attributes have a different notion of boolean values.\n\t\t// The value `false` is different from the attribute not\n\t\t// existing on the DOM, so we can't remove it. For non-boolean\n\t\t// ARIA-attributes we could treat false as a removal, but the\n\t\t// amount of exceptions would cost us too many bytes. On top of\n\t\t// that other VDOM frameworks also always stringify `false`.\n\n\t\tif (typeof value === 'function') {\n\t\t\t// never serialize functions as attribute values\n\t\t} else if (\n\t\t\tvalue != null &&\n\t\t\t(value !== false || (name[0] === 'a' && name[1] === 'r'))\n\t\t) {\n\t\t\tdom.setAttribute(name, value);\n\t\t} else {\n\t\t\tdom.removeAttribute(name);\n\t\t}\n\t}\n}\n\n/**\n * Proxy an event to hooked event handlers\n * @param {Event} e The event object from the browser\n * @private\n */\nfunction eventProxy(e) {\n\tthis._listeners[e.type + false](options.event ? options.event(e) : e);\n}\n\nfunction eventProxyCapture(e) {\n\tthis._listeners[e.type + true](options.event ? options.event(e) : e);\n}\n", "import { EMPTY_OBJ } from '../constants';\nimport { Component, getDomSibling } from '../component';\nimport { Fragment } from '../create-element';\nimport { diffChildren } from './children';\nimport { diffProps, setProperty } from './props';\nimport { assign, removeNode, slice } from '../util';\nimport options from '../options';\n\n/**\n * Diff two virtual nodes and apply proper changes to the DOM\n * @param {import('../internal').PreactElement} parentDom The parent of the DOM element\n * @param {import('../internal').VNode} newVNode The new virtual node\n * @param {import('../internal').VNode} oldVNode The old virtual node\n * @param {object} globalContext The current context object. Modified by getChildContext\n * @param {boolean} isSvg Whether or not this element is an SVG node\n * @param {Array<import('../internal').PreactElement>} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {import('../internal').PreactElement} oldDom The current attached DOM\n * element any new dom elements should be placed around. Likely `null` on first\n * render (except when hydrating). Can be a sibling DOM element when diffing\n * Fragments that have siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} [isHydrating] Whether or not we are in hydration\n */\nexport function diff(\n\tparentDom,\n\tnewVNode,\n\toldVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\toldDom,\n\tisHydrating\n) {\n\tlet tmp,\n\t\tnewType = newVNode.type;\n\n\t// When passing through createElement it assigns the object\n\t// constructor as undefined. This to prevent JSON-injection.\n\tif (newVNode.constructor !== undefined) return null;\n\n\t// If the previous diff bailed out, resume creating/hydrating.\n\tif (oldVNode._hydrating != null) {\n\t\tisHydrating = oldVNode._hydrating;\n\t\toldDom = newVNode._dom = oldVNode._dom;\n\t\t// if we resume, we want the tree to be \"unlocked\"\n\t\tnewVNode._hydrating = null;\n\t\texcessDomChildren = [oldDom];\n\t}\n\n\tif ((tmp = options._diff)) tmp(newVNode);\n\n\ttry {\n\t\touter: if (typeof newType == 'function') {\n\t\t\tlet c, isNew, oldProps, oldState, snapshot, clearProcessingException;\n\t\t\tlet newProps = newVNode.props;\n\n\t\t\t// Necessary for createContext api. Setting this property will pass\n\t\t\t// the context value as `this.context` just for this component.\n\t\t\ttmp = newType.contextType;\n\t\t\tlet provider = tmp && globalContext[tmp._id];\n\t\t\tlet componentContext = tmp\n\t\t\t\t? provider\n\t\t\t\t\t? provider.props.value\n\t\t\t\t\t: tmp._defaultValue\n\t\t\t\t: globalContext;\n\n\t\t\t// Get component and set it to `c`\n\t\t\tif (oldVNode._component) {\n\t\t\t\tc = newVNode._component = oldVNode._component;\n\t\t\t\tclearProcessingException = c._processingException = c._pendingError;\n\t\t\t} else {\n\t\t\t\t// Instantiate the new component\n\t\t\t\tif ('prototype' in newType && newType.prototype.render) {\n\t\t\t\t\t// @ts-ignore The check above verifies that newType is suppose to be constructed\n\t\t\t\t\tnewVNode._component = c = new newType(newProps, componentContext); // eslint-disable-line new-cap\n\t\t\t\t} else {\n\t\t\t\t\t// @ts-ignore Trust me, Component implements the interface we want\n\t\t\t\t\tnewVNode._component = c = new Component(newProps, componentContext);\n\t\t\t\t\tc.constructor = newType;\n\t\t\t\t\tc.render = doRender;\n\t\t\t\t}\n\t\t\t\tif (provider) provider.sub(c);\n\n\t\t\t\tc.props = newProps;\n\t\t\t\tif (!c.state) c.state = {};\n\t\t\t\tc.context = componentContext;\n\t\t\t\tc._globalContext = globalContext;\n\t\t\t\tisNew = c._dirty = true;\n\t\t\t\tc._renderCallbacks = [];\n\t\t\t}\n\n\t\t\t// Invoke getDerivedStateFromProps\n\t\t\tif (c._nextState == null) {\n\t\t\t\tc._nextState = c.state;\n\t\t\t}\n\t\t\tif (newType.getDerivedStateFromProps != null) {\n\t\t\t\tif (c._nextState == c.state) {\n\t\t\t\t\tc._nextState = assign({}, c._nextState);\n\t\t\t\t}\n\n\t\t\t\tassign(\n\t\t\t\t\tc._nextState,\n\t\t\t\t\tnewType.getDerivedStateFromProps(newProps, c._nextState)\n\t\t\t\t);\n\t\t\t}\n\n\t\t\toldProps = c.props;\n\t\t\toldState = c.state;\n\n\t\t\t// Invoke pre-render lifecycle methods\n\t\t\tif (isNew) {\n\t\t\t\tif (\n\t\t\t\t\tnewType.getDerivedStateFromProps == null &&\n\t\t\t\t\tc.componentWillMount != null\n\t\t\t\t) {\n\t\t\t\t\tc.componentWillMount();\n\t\t\t\t}\n\n\t\t\t\tif (c.componentDidMount != null) {\n\t\t\t\t\tc._renderCallbacks.push(c.componentDidMount);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (\n\t\t\t\t\tnewType.getDerivedStateFromProps == null &&\n\t\t\t\t\tnewProps !== oldProps &&\n\t\t\t\t\tc.componentWillReceiveProps != null\n\t\t\t\t) {\n\t\t\t\t\tc.componentWillReceiveProps(newProps, componentContext);\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\t(!c._force &&\n\t\t\t\t\t\tc.shouldComponentUpdate != null &&\n\t\t\t\t\t\tc.shouldComponentUpdate(\n\t\t\t\t\t\t\tnewProps,\n\t\t\t\t\t\t\tc._nextState,\n\t\t\t\t\t\t\tcomponentContext\n\t\t\t\t\t\t) === false) ||\n\t\t\t\t\tnewVNode._original === oldVNode._original\n\t\t\t\t) {\n\t\t\t\t\tc.props = newProps;\n\t\t\t\t\tc.state = c._nextState;\n\t\t\t\t\t// More info about this here: https://gist.github.com/JoviDeCroock/bec5f2ce93544d2e6070ef8e0036e4e8\n\t\t\t\t\tif (newVNode._original !== oldVNode._original) c._dirty = false;\n\t\t\t\t\tc._vnode = newVNode;\n\t\t\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t\t\t\tnewVNode._children = oldVNode._children;\n\t\t\t\t\tnewVNode._children.forEach(vnode => {\n\t\t\t\t\t\tif (vnode) vnode._parent = newVNode;\n\t\t\t\t\t});\n\t\t\t\t\tif (c._renderCallbacks.length) {\n\t\t\t\t\t\tcommitQueue.push(c);\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\n\t\t\t\tif (c.componentWillUpdate != null) {\n\t\t\t\t\tc.componentWillUpdate(newProps, c._nextState, componentContext);\n\t\t\t\t}\n\n\t\t\t\tif (c.componentDidUpdate != null) {\n\t\t\t\t\tc._renderCallbacks.push(() => {\n\t\t\t\t\t\tc.componentDidUpdate(oldProps, oldState, snapshot);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tc.context = componentContext;\n\t\t\tc.props = newProps;\n\t\t\tc._vnode = newVNode;\n\t\t\tc._parentDom = parentDom;\n\n\t\t\tlet renderHook = options._render,\n\t\t\t\tcount = 0;\n\t\t\tif ('prototype' in newType && newType.prototype.render) {\n\t\t\t\tc.state = c._nextState;\n\t\t\t\tc._dirty = false;\n\n\t\t\t\tif (renderHook) renderHook(newVNode);\n\n\t\t\t\ttmp = c.render(c.props, c.state, c.context);\n\t\t\t} else {\n\t\t\t\tdo {\n\t\t\t\t\tc._dirty = false;\n\t\t\t\t\tif (renderHook) renderHook(newVNode);\n\n\t\t\t\t\ttmp = c.render(c.props, c.state, c.context);\n\n\t\t\t\t\t// Handle setState called in render, see #2553\n\t\t\t\t\tc.state = c._nextState;\n\t\t\t\t} while (c._dirty && ++count < 25);\n\t\t\t}\n\n\t\t\t// Handle setState called in render, see #2553\n\t\t\tc.state = c._nextState;\n\n\t\t\tif (c.getChildContext != null) {\n\t\t\t\tglobalContext = assign(assign({}, globalContext), c.getChildContext());\n\t\t\t}\n\n\t\t\tif (!isNew && c.getSnapshotBeforeUpdate != null) {\n\t\t\t\tsnapshot = c.getSnapshotBeforeUpdate(oldProps, oldState);\n\t\t\t}\n\n\t\t\tlet isTopLevelFragment =\n\t\t\t\ttmp != null && tmp.type === Fragment && tmp.key == null;\n\t\t\tlet renderResult = isTopLevelFragment ? tmp.props.children : tmp;\n\n\t\t\tdiffChildren(\n\t\t\t\tparentDom,\n\t\t\t\tArray.isArray(renderResult) ? renderResult : [renderResult],\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg,\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\toldDom,\n\t\t\t\tisHydrating\n\t\t\t);\n\n\t\t\tc.base = newVNode._dom;\n\n\t\t\t// We successfully rendered this VNode, unset any stored hydration/bailout state:\n\t\t\tnewVNode._hydrating = null;\n\n\t\t\tif (c._renderCallbacks.length) {\n\t\t\t\tcommitQueue.push(c);\n\t\t\t}\n\n\t\t\tif (clearProcessingException) {\n\t\t\t\tc._pendingError = c._processingException = null;\n\t\t\t}\n\n\t\t\tc._force = false;\n\t\t} else if (\n\t\t\texcessDomChildren == null &&\n\t\t\tnewVNode._original === oldVNode._original\n\t\t) {\n\t\t\tnewVNode._children = oldVNode._children;\n\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t} else {\n\t\t\tnewVNode._dom = diffElementNodes(\n\t\t\t\toldVNode._dom,\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg,\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\tisHydrating\n\t\t\t);\n\t\t}\n\n\t\tif ((tmp = options.diffed)) tmp(newVNode);\n\t} catch (e) {\n\t\tnewVNode._original = null;\n\t\t// if hydrating or creating initial tree, bailout preserves DOM:\n\t\tif (isHydrating || excessDomChildren != null) {\n\t\t\tnewVNode._dom = oldDom;\n\t\t\tnewVNode._hydrating = !!isHydrating;\n\t\t\texcessDomChildren[excessDomChildren.indexOf(oldDom)] = null;\n\t\t\t// ^ could possibly be simplified to:\n\t\t\t// excessDomChildren.length = 0;\n\t\t}\n\t\toptions._catchError(e, newVNode, oldVNode);\n\t}\n}\n\n/**\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {import('../internal').VNode} root\n */\nexport function commitRoot(commitQueue, root) {\n\tif (options._commit) options._commit(root, commitQueue);\n\n\tcommitQueue.some(c => {\n\t\ttry {\n\t\t\t// @ts-ignore Reuse the commitQueue variable here so the type changes\n\t\t\tcommitQueue = c._renderCallbacks;\n\t\t\tc._renderCallbacks = [];\n\t\t\tcommitQueue.some(cb => {\n\t\t\t\t// @ts-ignore See above ts-ignore on commitQueue\n\t\t\t\tcb.call(c);\n\t\t\t});\n\t\t} catch (e) {\n\t\t\toptions._catchError(e, c._vnode);\n\t\t}\n\t});\n}\n\n/**\n * Diff two virtual nodes representing DOM element\n * @param {import('../internal').PreactElement} dom The DOM element representing\n * the virtual nodes being diffed\n * @param {import('../internal').VNode} newVNode The new virtual node\n * @param {import('../internal').VNode} oldVNode The old virtual node\n * @param {object} globalContext The current context object\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node\n * @param {*} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {boolean} isHydrating Whether or not we are in hydration\n * @returns {import('../internal').PreactElement}\n */\nfunction diffElementNodes(\n\tdom,\n\tnewVNode,\n\toldVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\tisHydrating\n) {\n\tlet oldProps = oldVNode.props;\n\tlet newProps = newVNode.props;\n\tlet nodeType = newVNode.type;\n\tlet i = 0;\n\n\t// Tracks entering and exiting SVG namespace when descending through the tree.\n\tif (nodeType === 'svg') isSvg = true;\n\n\tif (excessDomChildren != null) {\n\t\tfor (; i < excessDomChildren.length; i++) {\n\t\t\tconst child = excessDomChildren[i];\n\n\t\t\t// if newVNode matches an element in excessDomChildren or the `dom`\n\t\t\t// argument matches an element in excessDomChildren, remove it from\n\t\t\t// excessDomChildren so it isn't later removed in diffChildren\n\t\t\tif (\n\t\t\t\tchild &&\n\t\t\t\t'setAttribute' in child === !!nodeType &&\n\t\t\t\t(nodeType ? child.localName === nodeType : child.nodeType === 3)\n\t\t\t) {\n\t\t\t\tdom = child;\n\t\t\t\texcessDomChildren[i] = null;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (dom == null) {\n\t\tif (nodeType === null) {\n\t\t\t// @ts-ignore createTextNode returns Text, we expect PreactElement\n\t\t\treturn document.createTextNode(newProps);\n\t\t}\n\n\t\tif (isSvg) {\n\t\t\tdom = document.createElementNS(\n\t\t\t\t'http://www.w3.org/2000/svg',\n\t\t\t\t// @ts-ignore We know `newVNode.type` is a string\n\t\t\t\tnodeType\n\t\t\t);\n\t\t} else {\n\t\t\tdom = document.createElement(\n\t\t\t\t// @ts-ignore We know `newVNode.type` is a string\n\t\t\t\tnodeType,\n\t\t\t\tnewProps.is && newProps\n\t\t\t);\n\t\t}\n\n\t\t// we created a new parent, so none of the previously attached children can be reused:\n\t\texcessDomChildren = null;\n\t\t// we are creating a new node, so we can assume this is a new subtree (in case we are hydrating), this deopts the hydrate\n\t\tisHydrating = false;\n\t}\n\n\tif (nodeType === null) {\n\t\t// During hydration, we still have to split merged text from SSR'd HTML.\n\t\tif (oldProps !== newProps && (!isHydrating || dom.data !== newProps)) {\n\t\t\tdom.data = newProps;\n\t\t}\n\t} else {\n\t\t// If excessDomChildren was not null, repopulate it with the current element's children:\n\t\texcessDomChildren = excessDomChildren && slice.call(dom.childNodes);\n\n\t\toldProps = oldVNode.props || EMPTY_OBJ;\n\n\t\tlet oldHtml = oldProps.dangerouslySetInnerHTML;\n\t\tlet newHtml = newProps.dangerouslySetInnerHTML;\n\n\t\t// During hydration, props are not diffed at all (including dangerouslySetInnerHTML)\n\t\t// @TODO we should warn in debug mode when props don't match here.\n\t\tif (!isHydrating) {\n\t\t\t// But, if we are in a situation where we are using existing DOM (e.g. replaceNode)\n\t\t\t// we should read the existing DOM attributes to diff them\n\t\t\tif (excessDomChildren != null) {\n\t\t\t\toldProps = {};\n\t\t\t\tfor (i = 0; i < dom.attributes.length; i++) {\n\t\t\t\t\toldProps[dom.attributes[i].name] = dom.attributes[i].value;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (newHtml || oldHtml) {\n\t\t\t\t// Avoid re-applying the same '__html' if it did not changed between re-render\n\t\t\t\tif (\n\t\t\t\t\t!newHtml ||\n\t\t\t\t\t((!oldHtml || newHtml.__html != oldHtml.__html) &&\n\t\t\t\t\t\tnewHtml.__html !== dom.innerHTML)\n\t\t\t\t) {\n\t\t\t\t\tdom.innerHTML = (newHtml && newHtml.__html) || '';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tdiffProps(dom, newProps, oldProps, isSvg, isHydrating);\n\n\t\t// If the new vnode didn't have dangerouslySetInnerHTML, diff its children\n\t\tif (newHtml) {\n\t\t\tnewVNode._children = [];\n\t\t} else {\n\t\t\ti = newVNode.props.children;\n\t\t\tdiffChildren(\n\t\t\t\tdom,\n\t\t\t\tArray.isArray(i) ? i : [i],\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg && nodeType !== 'foreignObject',\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\texcessDomChildren\n\t\t\t\t\t? excessDomChildren[0]\n\t\t\t\t\t: oldVNode._children && getDomSibling(oldVNode, 0),\n\t\t\t\tisHydrating\n\t\t\t);\n\n\t\t\t// Remove children that are not part of any vnode.\n\t\t\tif (excessDomChildren != null) {\n\t\t\t\tfor (i = excessDomChildren.length; i--; ) {\n\t\t\t\t\tif (excessDomChildren[i] != null) removeNode(excessDomChildren[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// (as above, don't diff props during hydration)\n\t\tif (!isHydrating) {\n\t\t\tif (\n\t\t\t\t'value' in newProps &&\n\t\t\t\t(i = newProps.value) !== undefined &&\n\t\t\t\t// #2756 For the <progress>-element the initial value is 0,\n\t\t\t\t// despite the attribute not being present. When the attribute\n\t\t\t\t// is missing the progress bar is treated as indeterminate.\n\t\t\t\t// To fix that we'll always update it when it is 0 for progress elements\n\t\t\t\t(i !== dom.value ||\n\t\t\t\t\t(nodeType === 'progress' && !i) ||\n\t\t\t\t\t// This is only for IE 11 to fix <select> value not being updated.\n\t\t\t\t\t// To avoid a stale select value we need to set the option.value\n\t\t\t\t\t// again, which triggers IE11 to re-evaluate the select value\n\t\t\t\t\t(nodeType === 'option' && i !== oldProps.value))\n\t\t\t) {\n\t\t\t\tsetProperty(dom, 'value', i, oldProps.value, false);\n\t\t\t}\n\t\t\tif (\n\t\t\t\t'checked' in newProps &&\n\t\t\t\t(i = newProps.checked) !== undefined &&\n\t\t\t\ti !== dom.checked\n\t\t\t) {\n\t\t\t\tsetProperty(dom, 'checked', i, oldProps.checked, false);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn dom;\n}\n\n/**\n * Invoke or update a ref, depending on whether it is a function or object ref.\n * @param {object|function} ref\n * @param {any} value\n * @param {import('../internal').VNode} vnode\n */\nexport function applyRef(ref, value, vnode) {\n\ttry {\n\t\tif (typeof ref == 'function') ref(value);\n\t\telse ref.current = value;\n\t} catch (e) {\n\t\toptions._catchError(e, vnode);\n\t}\n}\n\n/**\n * Unmount a virtual node from the tree and apply DOM changes\n * @param {import('../internal').VNode} vnode The virtual node to unmount\n * @param {import('../internal').VNode} parentVNode The parent of the VNode that\n * initiated the unmount\n * @param {boolean} [skipRemove] Flag that indicates that a parent node of the\n * current element is already detached from the DOM.\n */\nexport function unmount(vnode, parentVNode, skipRemove) {\n\tlet r;\n\tif (options.unmount) options.unmount(vnode);\n\n\tif ((r = vnode.ref)) {\n\t\tif (!r.current || r.current === vnode._dom) applyRef(r, null, parentVNode);\n\t}\n\n\tif ((r = vnode._component) != null) {\n\t\tif (r.componentWillUnmount) {\n\t\t\ttry {\n\t\t\t\tr.componentWillUnmount();\n\t\t\t} catch (e) {\n\t\t\t\toptions._catchError(e, parentVNode);\n\t\t\t}\n\t\t}\n\n\t\tr.base = r._parentDom = null;\n\t}\n\n\tif ((r = vnode._children)) {\n\t\tfor (let i = 0; i < r.length; i++) {\n\t\t\tif (r[i]) {\n\t\t\t\tunmount(r[i], parentVNode, typeof vnode.type != 'function');\n\t\t\t}\n\t\t}\n\t}\n\n\tif (!skipRemove && vnode._dom != null) removeNode(vnode._dom);\n\n\t// Must be set to `undefined` to properly clean up `_nextDom`\n\t// for which `null` is a valid value. See comment in `create-element.js`\n\tvnode._dom = vnode._nextDom = undefined;\n}\n\n/** The `.render()` method for a PFC backing instance. */\nfunction doRender(props, state, context) {\n\treturn this.constructor(props, context);\n}\n", "import { EMPTY_OBJ } from './constants';\nimport { commitRoot, diff } from './diff/index';\nimport { createElement, Fragment } from './create-element';\nimport options from './options';\nimport { slice } from './util';\n\n/**\n * Render a Preact virtual node into a DOM element\n * @param {import('./internal').ComponentChild} vnode The virtual node to render\n * @param {import('./internal').PreactElement} parentDom The DOM element to\n * render into\n * @param {import('./internal').PreactElement | object} [replaceNode] Optional: Attempt to re-use an\n * existing DOM tree rooted at `replaceNode`\n */\nexport function render(vnode, parentDom, replaceNode) {\n\tif (options._root) options._root(vnode, parentDom);\n\n\t// We abuse the `replaceNode` parameter in `hydrate()` to signal if we are in\n\t// hydration mode or not by passing the `hydrate` function instead of a DOM\n\t// element..\n\tlet isHydrating = typeof replaceNode === 'function';\n\n\t// To be able to support calling `render()` multiple times on the same\n\t// DOM node, we need to obtain a reference to the previous tree. We do\n\t// this by assigning a new `_children` property to DOM nodes which points\n\t// to the last rendered tree. By default this property is not present, which\n\t// means that we are mounting a new tree for the first time.\n\tlet oldVNode = isHydrating\n\t\t? null\n\t\t: (replaceNode && replaceNode._children) || parentDom._children;\n\n\tvnode = (\n\t\t(!isHydrating && replaceNode) ||\n\t\tparentDom\n\t)._children = createElement(Fragment, null, [vnode]);\n\n\t// List of effects that need to be called after diffing.\n\tlet commitQueue = [];\n\tdiff(\n\t\tparentDom,\n\t\t// Determine the new vnode tree and store it on the DOM element on\n\t\t// our custom `_children` property.\n\t\tvnode,\n\t\toldVNode || EMPTY_OBJ,\n\t\tEMPTY_OBJ,\n\t\tparentDom.ownerSVGElement !== undefined,\n\t\t!isHydrating && replaceNode\n\t\t\t? [replaceNode]\n\t\t\t: oldVNode\n\t\t\t? null\n\t\t\t: parentDom.firstChild\n\t\t\t? slice.call(parentDom.childNodes)\n\t\t\t: null,\n\t\tcommitQueue,\n\t\t!isHydrating && replaceNode\n\t\t\t? replaceNode\n\t\t\t: oldVNode\n\t\t\t? oldVNode._dom\n\t\t\t: parentDom.firstChild,\n\t\tisHydrating\n\t);\n\n\t// Flush all queued effects\n\tcommitRoot(commitQueue, vnode);\n}\n\n/**\n * Update an existing DOM element with data from a Preact virtual node\n * @param {import('./internal').ComponentChild} vnode The virtual node to render\n * @param {import('./internal').PreactElement} parentDom The DOM element to\n * update\n */\nexport function hydrate(vnode, parentDom) {\n\trender(vnode, parentDom, hydrate);\n}\n", "import { assign, slice } from './util';\nimport { createVNode } from './create-element';\n\n/**\n * Clones the given VNode, optionally adding attributes/props and replacing its children.\n * @param {import('./internal').VNode} vnode The virtual DOM element to clone\n * @param {object} props Attributes/props to add when cloning\n * @param {Array<import('./internal').ComponentChildren>} rest Any additional arguments will be used as replacement children.\n * @returns {import('./internal').VNode}\n */\nexport function cloneElement(vnode, props, children) {\n\tlet normalizedProps = assign({}, vnode.props),\n\t\tkey,\n\t\tref,\n\t\ti;\n\tfor (i in props) {\n\t\tif (i == 'key') key = props[i];\n\t\telse if (i == 'ref') ref = props[i];\n\t\telse normalizedProps[i] = props[i];\n\t}\n\n\tif (arguments.length > 2) {\n\t\tnormalizedProps.children =\n\t\t\targuments.length > 3 ? slice.call(arguments, 2) : children;\n\t}\n\n\treturn createVNode(\n\t\tvnode.type,\n\t\tnormalizedProps,\n\t\tkey || vnode.key,\n\t\tref || vnode.ref,\n\t\tnull\n\t);\n}\n", "/**\n * Find the closest error boundary to a thrown error and call it\n * @param {object} error The thrown value\n * @param {import('../internal').VNode} vnode The vnode that threw\n * the error that was caught (except for unmounting when this parameter\n * is the highest parent that was being unmounted)\n * @param {import('../internal').VNode} [oldVNode]\n * @param {import('../internal').ErrorInfo} [errorInfo]\n */\nexport function _catchError(error, vnode, oldVNode, errorInfo) {\n\t/** @type {import('../internal').Component} */\n\tlet component, ctor, handled;\n\n\tfor (; (vnode = vnode._parent); ) {\n\t\tif ((component = vnode._component) && !component._processingException) {\n\t\t\ttry {\n\t\t\t\tctor = component.constructor;\n\n\t\t\t\tif (ctor && ctor.getDerivedStateFromError != null) {\n\t\t\t\t\tcomponent.setState(ctor.getDerivedStateFromError(error));\n\t\t\t\t\thandled = component._dirty;\n\t\t\t\t}\n\n\t\t\t\tif (component.componentDidCatch != null) {\n\t\t\t\t\tcomponent.componentDidCatch(error, errorInfo || {});\n\t\t\t\t\thandled = component._dirty;\n\t\t\t\t}\n\n\t\t\t\t// This is an error boundary. Mark it as having bailed out, and whether it was mid-hydration.\n\t\t\t\tif (handled) {\n\t\t\t\t\treturn (component._pendingError = component);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\terror = e;\n\t\t\t}\n\t\t}\n\t}\n\n\tthrow error;\n}\n", "let ROOT: Signal;\n\n/** This tracks subscriptions of signals read inside a computed */\nlet currentSignal: Signal;\nlet commitError: Error | null = null;\n\nconst pending = new Set<Signal>();\n/** Batch calls can be nested. 0 means that there is no batching */\nlet batchPending = 0;\n/**\n * Subscriptions are set up lazily when a \"reactor\" is set up.\n * During this activation phase we traverse the graph upwards\n * and refresh all signals that are stale on signal read.\n */\nlet activating = false;\n\nlet oldDeps = new Set<Signal>();\n\nexport class Signal<T = any> {\n\t// These property names get minified - see /mangle.json\n\n\t/** @internal Internal, do not use. */\n\t_subs = new Set<Signal>();\n\t/** @internal Internal, do not use. */\n\t_deps = new Set<Signal>();\n\t/** @internal Internal, do not use. */\n\t_pending = 0;\n\t/** @internal Internal, do not use. */\n\t_value: T;\n\t/** @internal Determine if a computed is allowed to write or not */\n\t_readonly = false;\n\t/** @internal Marks the signal as requiring an update */\n\t_requiresUpdate = false;\n\t/** @internal Determine if reads should eagerly activate value */\n\t_canActivate = false;\n\t/** @internal Used to detect if there is a cycle in the graph */\n\t_isComputing = false;\n\n\tconstructor(value: T) {\n\t\tthis._value = value;\n\t}\n\n\ttoString() {\n\t\treturn \"\" + this.value;\n\t}\n\n\tpeek() {\n\t\treturn this._value;\n\t}\n\n\tget value() {\n\t\t// If we read a signal outside of a computed we have no way\n\t\t// to unsubscribe from that. So we assume that the user wants\n\t\t// to get the value immediately like for testing.\n\t\tif (currentSignal._canActivate && this._deps.size === 0) {\n\t\t\tactivate(this);\n\n\t\t\t// The ROOT signal cannot track dependencies as it's never\n\t\t\t// subscribed to\n\t\t\tif (currentSignal === ROOT) {\n\t\t\t\treturn this._value;\n\t\t\t}\n\t\t}\n\n\t\t// subscribe the current computed to this signal:\n\t\tthis._subs.add(currentSignal);\n\t\t// update the current computed's dependencies:\n\t\tcurrentSignal._deps.add(this);\n\t\toldDeps.delete(this);\n\n\t\t// refresh stale value when this signal is read from withing\n\t\t// batching and when it has been marked already\n\t\tif (\n\t\t\t(batchPending > 0 && this._pending > 0) ||\n\t\t\t// Set up subscriptions during activation phase\n\t\t\t(activating && this._deps.size === 0)\n\t\t) {\n\t\t\trefreshStale(this);\n\t\t}\n\t\treturn this._value;\n\t}\n\n\tset value(value) {\n\t\tif (this._readonly) {\n\t\t\tthrow new Error(\"Computed signals are readonly\");\n\t\t}\n\n\t\tif (this._value !== value) {\n\t\t\tthis._value = value;\n\t\t\tlet isFirst = pending.size === 0;\n\n\t\t\tpending.add(this);\n\t\t\t// in batch mode this signal may be marked already\n\t\t\tif (this._pending === 0) {\n\t\t\t\tmark(this);\n\t\t\t}\n\n\t\t\t// this is the first change, not a computed and we are not\n\t\t\t// in batch mode:\n\t\t\tif (isFirst && batchPending === 0) {\n\t\t\t\tsweep(pending);\n\t\t\t\tpending.clear();\n\t\t\t\tif (commitError) {\n\t\t\t\t\tconst err = commitError;\n\t\t\t\t\t// Clear global error flag for next commit\n\t\t\t\t\tcommitError = null;\n\t\t\t\t\tthrow err;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Start a read operation where this signal is the \"current signal\" context.\n\t * Returns a function that must be called to end the read context.\n\t * @internal\n\t */\n\t_setCurrent() {\n\t\tlet prevSignal = currentSignal;\n\t\tlet prevOldDeps = oldDeps;\n\t\tcurrentSignal = this;\n\t\toldDeps = this._deps;\n\t\tthis._deps = new Set();\n\n\t\treturn (shouldUnmark: boolean, shouldCleanup: boolean) => {\n\t\t\tif (shouldUnmark) this._subs.forEach(unmark);\n\n\t\t\t// Any leftover dependencies here are not needed anymore\n\t\t\tif (shouldCleanup) {\n\t\t\t\t// Unsubscribe from dependencies that were not accessed:\n\t\t\t\toldDeps.forEach(sub => unsubscribe(this, sub));\n\t\t\t} else {\n\t\t\t\t// Re-subscribe to dependencies that not accessed:\n\t\t\t\toldDeps.forEach(sub => subscribe(this, sub));\n\t\t\t}\n\n\t\t\toldDeps.clear();\n\t\t\toldDeps = prevOldDeps;\n\t\t\tcurrentSignal = prevSignal;\n\t\t};\n\t}\n\n\t/**\n\t * A custom update routine to run when this Signal's value changes.\n\t * @internal\n\t */\n\t_updater() {\n\t\t// override me to handle updates\n\t}\n}\n\nfunction mark(signal: Signal) {\n\tif (signal._pending++ === 0) {\n\t\tsignal._subs.forEach(mark);\n\t}\n}\n\nfunction unmark(signal: Signal<any>) {\n\t// We can only unmark this node as not needing an update if it\n\t// wasn't flagged as needing an update by someone else. This is\n\t// done to make the sweeping logic independent of the order\n\t// in which a dependency tries to unmark a subtree.\n\tif (!signal._requiresUpdate && --signal._pending === 0) {\n\t\tsignal._subs.forEach(unmark);\n\t}\n}\n\nfunction sweep(subs: Set<Signal<any>>) {\n\tsubs.forEach(signal => {\n\t\t// If a computed errored during sweep, we'll discard that subtree\n\t\t// for this sweep cycle by setting PENDING to 0;\n\t\tif (signal._pending > 0) {\n\t\t\tsignal._requiresUpdate = true;\n\n\t\t\tif (--signal._pending === 0) {\n\t\t\t\tif (signal._isComputing) {\n\t\t\t\t\tthrow new Error(\"Cycle detected\");\n\t\t\t\t}\n\n\t\t\t\tsignal._requiresUpdate = false;\n\t\t\t\tsignal._isComputing = true;\n\t\t\t\tsignal._updater();\n\t\t\t\tsignal._isComputing = false;\n\t\t\t\tsweep(signal._subs);\n\t\t\t}\n\t\t}\n\t});\n}\n\nfunction subscribe(signal: Signal<any>, to: Signal<any>) {\n\tsignal._deps.add(to);\n\tto._subs.add(signal);\n}\n\nfunction unsubscribe(signal: Signal<any>, from: Signal<any>) {\n\tsignal._deps.delete(from);\n\tfrom._subs.delete(signal);\n\n\t// If nobody listens to the signal we depended on, we can traverse\n\t// upwards and destroy all subscriptions until we encounter a writable\n\t// signal or a signal that others listen to as well.\n\tif (from._subs.size === 0) {\n\t\tfrom._deps.forEach(dep => unsubscribe(from, dep));\n\t}\n}\n\nconst tmpPending: Signal[] = [];\n/**\n * Refresh _just_ this signal and its dependencies recursively.\n * All other signals will be left untouched and added to the\n * global queue to flush later. Since we're traversing \"upwards\",\n * we don't have to car about topological sorting.\n */\nfunction refreshStale(signal: Signal) {\n\tpending.delete(signal);\n\tsignal._pending = 0;\n\tsignal._updater();\n\tif (commitError) {\n\t\tconst err = commitError;\n\t\tcommitError = null;\n\t\tthrow err;\n\t}\n\n\tsignal._subs.forEach(sub => {\n\t\tif (sub._pending > 0) {\n\t\t\t// If PENDING > 1 then we can safely reduce the counter because\n\t\t\t// the final sweep will take care of the rest. But if it's\n\t\t\t// exactly 1 we can't do that otherwise the sweeping logic\n\t\t\t// assumes that this signal was already updated.\n\t\t\tif (sub._pending > 1) sub._pending--;\n\t\t\ttmpPending.push(sub);\n\t\t}\n\t});\n}\n\nfunction activate(signal: Signal) {\n\tactivating = true;\n\ttry {\n\t\trefreshStale(signal);\n\t} finally {\n\t\tactivating = false;\n\t}\n}\n\nROOT = currentSignal = new Signal(undefined);\nROOT._canActivate = true;\n\nexport function signal<T>(value: T): Signal<T> {\n\treturn new Signal(value);\n}\n\nexport type ReadonlySignal<T = any> = Omit<Signal<T>, \"value\"> & {\n\treadonly value: T;\n};\nexport function computed<T>(compute: () => T): ReadonlySignal<T> {\n\tconst signal = new Signal<T>(undefined as any);\n\tsignal._readonly = true;\n\n\tfunction updater() {\n\t\tlet finish = signal._setCurrent();\n\n\t\ttry {\n\t\t\tlet ret = compute();\n\n\t\t\tfinish(signal._value === ret, true);\n\t\t\tsignal._value = ret;\n\t\t} catch (err: any) {\n\t\t\t// Ensure that we log the first error not the last\n\t\t\tif (!commitError) commitError = err;\n\t\t\tfinish(true, false);\n\t\t}\n\t}\n\n\tsignal._updater = updater;\n\n\treturn signal;\n}\n\nexport function effect(callback: () => void) {\n\tconst s = computed(() => batch(callback));\n\t// Set up subscriptions since this is a \"reactor\" signal\n\tactivate(s);\n\treturn () => s._setCurrent()(true, true);\n}\n\nexport function batch<T>(cb: () => T): T {\n\tbatchPending++;\n\ttry {\n\t\treturn cb();\n\t} finally {\n\t\t// Since stale signals are refreshed upwards, we need to\n\t\t// add pending signals in reverse\n\t\tlet item: Signal | undefined;\n\t\twhile ((item = tmpPending.pop()) !== undefined) {\n\t\t\tpending.add(item);\n\t\t}\n\n\t\tif (--batchPending === 0) {\n\t\t\tsweep(pending);\n\t\t\tpending.clear();\n\t\t}\n\t}\n}\n", "import { options, Component, createElement } from \"preact\";\nimport { useRef, useMemo } from \"preact/hooks\";\nimport {\n\tsignal,\n\tcomputed,\n\tbatch,\n\teffect,\n\tSignal,\n\ttype ReadonlySignal,\n} from \"@preact/signals-core\";\nimport {\n\tVNode,\n\tComponentType,\n\tOptionsTypes,\n\tHookFn,\n\tUpdater,\n\tElementUpdater,\n} from \"./internal\";\n\nexport { signal, computed, batch, effect, Signal, type ReadonlySignal };\n\n// Components that have a pending Signal update: (used to bypass default sCU:false)\nconst hasPendingUpdate = new WeakSet<Component>();\n\n// Components that have useState()/useReducer() hooks:\nconst hasHookState = new WeakSet<Component>();\n\n// Components that have useComputed():\nconst hasComputeds = new WeakSet<Component>();\n\n// Install a Preact options hook\nfunction hook<T extends OptionsTypes>(hookName: T, hookFn: HookFn<T>) {\n\t// @ts-ignore-next-line private options hooks usage\n\toptions[hookName] = hookFn.bind(null, options[hookName] || (() => {}));\n}\n\nlet currentComponent: Component | undefined;\nlet currentUpdater: Updater | undefined;\nlet finishUpdate: ReturnType<Updater[\"_setCurrent\"]> | undefined;\nconst updaterForComponent = new WeakMap<Component | VNode, Updater>();\n\nfunction setCurrentUpdater(updater?: Updater) {\n\t// end tracking for the current update:\n\tif (finishUpdate) finishUpdate(true, true);\n\t// start tracking the new update:\n\tcurrentUpdater = updater;\n\tfinishUpdate = updater && updater._setCurrent();\n}\n\nfunction createUpdater(updater: () => void) {\n\tconst s = signal(undefined) as Updater;\n\ts._canActivate = true;\n\ts._updater = updater;\n\treturn s;\n}\n\n// Get a (cached) Signal property updater for an element VNode\nfunction getElementUpdater(vnode: VNode) {\n\tlet updater = updaterForComponent.get(vnode) as ElementUpdater;\n\tif (!updater) {\n\t\tlet signalProps: string[] = [];\n\t\tupdater = createUpdater(() => {\n\t\t\tlet dom = vnode.__e as Element;\n\t\t\tlet props = vnode.props;\n\n\t\t\tfor (let i = 0; i < signalProps.length; i++) {\n\t\t\t\tlet prop = signalProps[i];\n\t\t\t\tlet value = props[prop]._value;\n\t\t\t\tif (prop in dom) {\n\t\t\t\t\t// @ts-ignore-next-line silly\n\t\t\t\t\tdom[prop] = value;\n\t\t\t\t} else if (value) {\n\t\t\t\t\tdom.setAttribute(prop, value);\n\t\t\t\t} else {\n\t\t\t\t\tdom.removeAttribute(prop);\n\t\t\t\t}\n\t\t\t}\n\t\t}) as ElementUpdater;\n\t\tupdater._props = signalProps;\n\t\tupdaterForComponent.set(vnode, updater);\n\t} else {\n\t\tupdater._props.length = 0;\n\t}\n\treturn updater;\n}\n\n/** @todo This may be needed for complex prop value detection. */\n// function isSignalValue(value: any): value is Signal {\n// \tif (typeof value !== \"object\" || value == null) return false;\n// \tif (value instanceof Signal) return true;\n// \t// @TODO: uncomment this when we land Reactive (ideally behind a brand check)\n// \t// for (let i in value) if (value[i] instanceof Signal) return true;\n// \treturn false;\n// }\n\n/** Convert Signals within (nested) props.children into Text components */\nfunction childToSignal<T>(child: any, i: keyof T, arr: T) {\n\tif (typeof child !== \"object\" || child == null) {\n\t\t// can't be a signal\n\t} else if (Array.isArray(child)) {\n\t\tchild.forEach(childToSignal);\n\t} else if (child instanceof Signal) {\n\t\t// @ts-ignore-next-line yes, arr can accept VNodes:\n\t\tarr[i] = createElement(Text, { data: child });\n\t}\n}\n\n/**\n * A wrapper component that renders a Signal directly as a Text node.\n * @todo: in Preact 11, just decorate Signal with `type:null`\n */\nfunction Text(this: ComponentType, { data }: { data: Signal }) {\n\t// hasComputeds.add(this);\n\n\tconst s = useMemo(() => {\n\t\t// mark the parent component as having computeds so it gets optimized\n\t\tlet v = this.__v;\n\t\twhile ((v = v.__!)) {\n\t\t\tif (v.__c) {\n\t\t\t\thasComputeds.add(v.__c);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t// Replace this component's vdom updater with a direct text one:\n\t\tcurrentUpdater!._updater = () => {\n\t\t\t(this.base as Text).data = s._value;\n\t\t};\n\n\t\treturn computed(() => {\n\t\t\tlet s = data.value;\n\t\t\treturn s === 0 ? 0 : s === true ? \"\" : s || \"\";\n\t\t});\n\t}, []);\n\n\treturn s.value;\n}\nText.displayName = \"_st\";\n\n/** Inject low-level property/attribute bindings for Signals into Preact's diff */\nhook(OptionsTypes.DIFF, (old, vnode) => {\n\tif (typeof vnode.type === \"string\") {\n\t\t// let orig = vnode.__o || vnode;\n\t\tlet props = vnode.props;\n\t\tlet updater;\n\n\t\tfor (let i in props) {\n\t\t\tlet value = props[i];\n\t\t\tif (i === \"children\") {\n\t\t\t\tchildToSignal(value, \"children\", props);\n\t\t\t} else if (value instanceof Signal) {\n\t\t\t\t// first Signal prop triggers creation/cleanup of the updater:\n\t\t\t\tif (!updater) updater = getElementUpdater(vnode);\n\t\t\t\t// track which props are Signals for precise updates:\n\t\t\t\tupdater._props.push(i);\n\t\t\t}\n\t\t}\n\n\t\tsetCurrentUpdater(updater);\n\t}\n\n\told(vnode);\n});\n\n/** Set up Updater before rendering a component */\nhook(OptionsTypes.RENDER, (old, vnode) => {\n\tlet updater;\n\n\tlet component = vnode.__c;\n\tif (component) {\n\t\thasPendingUpdate.delete(component);\n\n\t\tupdater = updaterForComponent.get(component);\n\t\tif (updater === undefined) {\n\t\t\tupdater = createUpdater(() => {\n\t\t\t\thasPendingUpdate.add(component);\n\t\t\t\tcomponent.setState({});\n\t\t\t});\n\t\t\tupdaterForComponent.set(component, updater);\n\t\t}\n\t}\n\n\tcurrentComponent = component;\n\tsetCurrentUpdater(updater);\n\told(vnode);\n});\n\n/** Finish current updater if a component errors */\nhook(OptionsTypes.CATCH_ERROR, (old, error, vnode, oldVNode) => {\n\tsetCurrentUpdater();\n\tcurrentComponent = undefined;\n\told(error, vnode, oldVNode);\n});\n\n/** Finish current updater after rendering any VNode */\nhook(OptionsTypes.DIFFED, (old, vnode) => {\n\tsetCurrentUpdater();\n\tcurrentComponent = undefined;\n\told(vnode);\n});\n\n/** Unsubscribe from Signals when unmounting components/vnodes */\nhook(OptionsTypes.UNMOUNT, (old, vnode: VNode) => {\n\tlet thing = vnode.__c || vnode;\n\tconst updater = updaterForComponent.get(thing);\n\tif (updater) {\n\t\tupdaterForComponent.delete(thing);\n\t\tconst signals = updater._deps;\n\t\tif (signals) {\n\t\t\tsignals.forEach(signal => signal._subs.delete(updater));\n\t\t\tsignals.clear();\n\t\t}\n\t}\n\told(vnode);\n});\n\n/** Mark components that use hook state so we can skip sCU optimization. */\nhook(OptionsTypes.HOOK, (old, component, index, type) => {\n\tif (type < 3) hasHookState.add(component);\n\told(component, index, type);\n});\n\n/**\n * Auto-memoize components that use Signals/Computeds.\n * Note: Does _not_ optimize components that use hook/class state.\n */\nComponent.prototype.shouldComponentUpdate = function (props, state) {\n\t// @todo: Once preactjs/preact#3671 lands, this could just use `currentUpdater`:\n\tconst updater = updaterForComponent.get(this);\n\n\tconst hasSignals = updater && updater._deps?.size !== 0;\n\n\t// let reason;\n\t// if (!hasSignals && !hasComputeds.has(this)) {\n\t// \treason = \"no signals or computeds\";\n\t// } else if (hasPendingUpdate.has(this)) {\n\t// \treason = \"has pending update\";\n\t// } else if (hasHookState.has(this)) {\n\t// \treason = \"has hook state\";\n\t// }\n\t// if (reason) {\n\t// \tif (!this) reason += \" (`this` bug)\";\n\t// \tconsole.log(\"not optimizing\", this?.constructor?.name, \": \", reason, {\n\t// \t\tdetails: {\n\t// \t\t\thasSignals,\n\t// \t\t\thasComputeds: hasComputeds.has(this),\n\t// \t\t\thasPendingUpdate: hasPendingUpdate.has(this),\n\t// \t\t\thasHookState: hasHookState.has(this),\n\t// \t\t\tdeps: Array.from(updater._deps),\n\t// \t\t\tupdater,\n\t// \t\t},\n\t// \t});\n\t// }\n\n\t// if this component used no signals or computeds, update:\n\tif (!hasSignals && !hasComputeds.has(this)) return true;\n\n\t// if there is a pending re-render triggered from Signals, update:\n\tif (hasPendingUpdate.has(this)) return true;\n\n\t// if there is hook or class state, update:\n\tif (hasHookState.has(this)) return true;\n\tfor (let i in state) return true;\n\n\t// if any non-Signal props changed, update:\n\tfor (let i in props) {\n\t\tif (i !== \"__source\" && props[i] !== this.props[i]) return true;\n\t}\n\tfor (let i in this.props) if (!(i in props)) return true;\n\n\t// this is a purely Signal-driven component, don't update:\n\treturn false;\n};\n\nexport function useSignal<T>(value: T) {\n\treturn useMemo(() => signal<T>(value), []);\n}\n\nexport function useComputed<T>(compute: () => T) {\n\tconst $compute = useRef(compute);\n\t$compute.current = compute;\n\thasComputeds.add(currentComponent!);\n\treturn useMemo(() => computed<T>(() => $compute.current()), []);\n}\n\n/**\n * @todo Determine which Reactive implementation we'll be using.\n * @internal\n */\n// export function useReactive<T extends object>(value: T): Reactive<T> {\n// \treturn useMemo(() => reactive<T>(value), []);\n// }\n\n/**\n * @internal\n * Update a Reactive's using the properties of an object or other Reactive.\n * Also works for Signals.\n * @example\n *   // Update a Reactive with Object.assign()-like syntax:\n *   const r = reactive({ name: \"Alice\" });\n *   update(r, { name: \"Bob\" });\n *   update(r, { age: 42 }); // property 'age' does not exist in type '{ name?: string }'\n *   update(r, 2); // '2' has no properties in common with '{ name?: string }'\n *   console.log(r.name.value); // \"Bob\"\n *\n * @example\n *   // Update a Reactive with the properties of another Reactive:\n *   const A = reactive({ name: \"Alice\" });\n *   const B = reactive({ name: \"Bob\", age: 42 });\n *   update(A, B);\n *   console.log(`${A.name} is ${A.age}`); // \"Bob is 42\"\n *\n * @example\n *   // Update a signal with assign()-like syntax:\n *   const s = signal(42);\n *   update(s, \"hi\"); // Argument type 'string' not assignable to type 'number'\n *   update(s, {}); // Argument type '{}' not assignable to type 'number'\n *   update(s, 43);\n *   console.log(s.value); // 43\n *\n * @param obj The Reactive or Signal to be updated\n * @param update The value, Signal, object or Reactive to update `obj` to match\n * @param overwrite If `true`, any properties `obj` missing from `update` are set to `undefined`\n */\n/*\nexport function update<T extends SignalOrReactive>(\n\tobj: T,\n\tupdate: Partial<Unwrap<T>>,\n\toverwrite = false\n) {\n\tif (obj instanceof Signal) {\n\t\tobj.value = peekValue(update);\n\t} else {\n\t\tfor (let i in update) {\n\t\t\tif (i in obj) {\n\t\t\t\tobj[i].value = peekValue(update[i]);\n\t\t\t} else {\n\t\t\t\tlet sig = signal(peekValue(update[i]));\n\t\t\t\tsig[KEY] = i;\n\t\t\t\tobj[i] = sig;\n\t\t\t}\n\t\t}\n\t\tif (overwrite) {\n\t\t\tfor (let i in obj) {\n\t\t\t\tif (!(i in update)) {\n\t\t\t\t\tobj[i].value = undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n*/\n", "import { options, Fragment } from 'preact';\n\n/** @typedef {import('preact').VNode} VNode */\n\nlet vnodeId = 0;\n\n/**\n * @fileoverview\n * This file exports various methods that implement Babel's \"automatic\" JSX runtime API:\n * - jsx(type, props, key)\n * - jsxs(type, props, key)\n * - jsxDEV(type, props, key, __source, __self)\n *\n * The implementation of createVNode here is optimized for performance.\n * Benchmarks: https://esbench.com/bench/5f6b54a0b4632100a7dcd2b3\n */\n\n/**\n * JSX.Element factory used by Babel's {runtime:\"automatic\"} JSX transform\n * @param {VNode['type']} type\n * @param {VNode['props']} props\n * @param {VNode['key']} [key]\n * @param {string} [__self]\n * @param {string} [__source]\n */\nfunction createVNode(type, props, key, __self, __source) {\n\t// We'll want to preserve `ref` in props to get rid of the need for\n\t// forwardRef components in the future, but that should happen via\n\t// a separate PR.\n\tlet normalizedProps = {},\n\t\tref,\n\t\ti;\n\tfor (i in props) {\n\t\tif (i == 'ref') {\n\t\t\tref = props[i];\n\t\t} else {\n\t\t\tnormalizedProps[i] = props[i];\n\t\t}\n\t}\n\n\tconst vnode = {\n\t\ttype,\n\t\tprops: normalizedProps,\n\t\tkey,\n\t\tref,\n\t\t_children: null,\n\t\t_parent: null,\n\t\t_depth: 0,\n\t\t_dom: null,\n\t\t_nextDom: undefined,\n\t\t_component: null,\n\t\t_hydrating: null,\n\t\tconstructor: undefined,\n\t\t_original: --vnodeId,\n\t\t__source,\n\t\t__self\n\t};\n\n\t// If a Component VNode, check for and apply defaultProps.\n\t// Note: `type` is often a String, and can be `undefined` in development.\n\tif (typeof type === 'function' && (ref = type.defaultProps)) {\n\t\tfor (i in ref)\n\t\t\tif (typeof normalizedProps[i] === 'undefined') {\n\t\t\t\tnormalizedProps[i] = ref[i];\n\t\t\t}\n\t}\n\n\tif (options.vnode) options.vnode(vnode);\n\treturn vnode;\n}\n\nexport {\n\tcreateVNode as jsx,\n\tcreateVNode as jsxs,\n\tcreateVNode as jsxDEV,\n\tFragment\n};\n", "import { Component, render, cloneElement, toChildArray, isValidElement } from 'preact';\nimport { signal, computed, Signal } from '@preact/signals';\n\nimport './style.css';\n\n\nclass RenderCount extends Component {\n\t#count = 0;\n\n\trender () {\n\t\tconst that = this;\n\n\t\treturn (\n\t\t\t<div className='render-count'>\n\t\t\t\trendered {++that.#count} time{that.#count !== 1 && 's'}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nclass TodoList extends Component {\n\t#items = signal([\n\t\t{ id: crypto.randomUUID(), text: 'Learn Preact' },\n\t\t{ id: crypto.randomUUID(), text: 'Do laundry' },\n\t]);\n\n\t#handleKeyUp = (ev) => {\n\t\tif (ev.key === 'Enter') {\n\t\t\tconst that = this;\n\n\t\t\tconst target = ev.target;\n\t\t\tconst value = target.value;\n\n\t\t\tif (value.trim() === '') {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst item = {\n\t\t\t\tid: crypto.randomUUID(),\n\t\t\t\ttext: value,\n\t\t\t};\n\n\t\t\tthat.#items.value = [item, ...that.#items.value];\n\t\t\ttarget.value = '';\n\t\t}\n\t}\n\n\t#removeItem (id) {\n\t\tconst that = this;\n\n\t\tlet items = that.#items.value;\n\t\tconst index = items.findIndex((item) => item.id === id);\n\n\t\tif (index !== -1) {\n\t\t\titems = items.slice();\n\t\t\titems.splice(index, 1);\n\n\t\t\tthat.#items.value = items;\n\t\t}\n\t}\n\n\trender () {\n\t\tconst that = this;\n\n\t\treturn (\n\t\t\t<div className='card'>\n\t\t\t\t<input placeholder='I want to...' onKeyUp={that.#handleKeyUp} />\n\n\t\t\t\t<For each={that.#items} fallback={<div>No items</div>}>\n\t\t\t\t\t{(item) => (\n\t\t\t\t\t\t<div key={item.id}>\n\t\t\t\t\t\t\t<button onClick={() => that.#removeItem(item.id)}>\n\t\t\t\t\t\t\t\tx\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t<span>{item.text}</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t</For>\n\n\t\t\t\t<RenderCount />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nclass App extends Component {\n\t#count = signal(0);\n\t#doubleCount = computed(() => this.#count * 2);\n\t#showCount = signal(false);\n\n\trender () {\n\t\tconst that = this;\n\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<div className='card'>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<strong>count: </strong>\n\t\t\t\t\t\t<button onClick={() => that.#count.value--}>&#x2013;</button>\n\t\t\t\t\t\t<output>\n\t\t\t\t\t\t\t<Show when={that.#showCount}>\n\t\t\t\t\t\t\t\t<span>{that.#count}</span>\n\t\t\t\t\t\t\t</Show>\n\t\t\t\t\t\t</output>\n\t\t\t\t\t\t<button onClick={() => that.#count.value++}>+</button>\n\t\t\t\t\t\t<button onClick={() => that.#count.value += 2}>+ &#xD7;2</button>\n\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\t\tonChange={(ev) => (that.#showCount.value = ev.target.checked)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\tshow value\n\t\t\t\t\t\t</label>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<strong>double count: </strong>\n\t\t\t\t\t\t<output>\n\t\t\t\t\t\t\t{that.#doubleCount}\n\t\t\t\t\t\t</output>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Match when={() => that.#count.value === 0}>\n\t\t\t\t\t\t\t<div>Qux!</div>\n\t\t\t\t\t\t</Match>\n\t\t\t\t\t\t<Match when={() => that.#count.value % 3 === 0}>\n\t\t\t\t\t\t\t<div>Foo!</div>\n\t\t\t\t\t\t</Match>\n\t\t\t\t\t\t<Match when={() => that.#count.value % 5 === 0}>\n\t\t\t\t\t\t\t<div>Bar!</div>\n\t\t\t\t\t\t</Match>\n\t\t\t\t\t\t<Match when>\n\t\t\t\t\t\t\t<div>Buzz!</div>\n\t\t\t\t\t\t</Match>\n\t\t\t\t\t</Switch>\n\n\t\t\t\t\t<RenderCount />\n\t\t\t\t</div>\n\n\t\t\t\t<TodoList />\n\t\t\t</>\n\t\t);\n\t}\n}\n\nrender(<App />, document.getElementById('root'));\n\nfunction unwrapSignal (val) {\n\treturn val instanceof Signal ? val.value : val;\n}\n\nfunction renderShow (child, value, key) {\n\treturn typeof child === 'function' ? child(value, key) : child;\n}\n\nfunction Show ({ when, fallback, children }) {\n\tconst value = unwrapSignal(when);\n\tconst rendered = renderShow(value ? children : fallback, value);\n\n\treturn rendered;\n}\n\nfunction For ({ each, children, fallback }) {\n\tconst values = unwrapSignal(each);\n\n\tconst rendered = values.length > 0\n\t\t? values.map((value, index) => renderShow(children, value, index))\n\t\t: renderShow(fallback);\n\n\treturn rendered;\n}\n\nfunction Switch ({ children }) {\n\tconst array = toChildArray(children);\n\n\tfor (const node of array) {\n\t\tif (!isValidElement(node) || node.type !== Match) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst when = node.props.when;\n\t\tconst value = typeof when === 'function' ? when() : unwrapSignal(when);\n\n\t\tif (value) {\n\t\t\treturn cloneElement(node, { _value: value });\n\t\t}\n\t}\n\n\treturn null;\n}\n\nfunction Match ({ when, children, _value }) {\n\treturn renderShow(children, _value);\n}\n"],
  "mappings": "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",
  "names": ["slice", "options", "vnodeId", "isValidElement", "rerenderQueue", "prevDebounce", "i", "EMPTY_OBJ", "EMPTY_ARR", "IS_NON_DIMENSIONAL", "assign", "obj", "props", "removeNode", "node", "parentNode", "removeChild", "createElement", "type", "children", "key", "ref", "normalizedProps", "arguments", "length", "call", "defaultProps", "createVNode", "original", "vnode", "undefined", "constructor", "Fragment", "props", "children", "Component", "context", "getDomSibling", "vnode", "childIndex", "indexOf", "sibling", "length", "type", "updateParentDomPointers", "i", "child", "base", "enqueueRender", "c", "rerenderQueue", "push", "process", "prevDebounce", "options", "debounceRendering", "setTimeout", "queue", "sort", "a", "b", "some", "component", "commitQueue", "oldVNode", "oldDom", "parentDom", "assign", "diff", "ownerSVGElement", "commitRoot", "diffChildren", "renderResult", "newParentVNode", "oldParentVNode", "globalContext", "isSvg", "excessDomChildren", "isHydrating", "j", "childVNode", "newDom", "firstChildDom", "refs", "oldChildren", "EMPTY_ARR", "oldChildrenLength", "createVNode", "Array", "isArray", "key", "undefined", "EMPTY_OBJ", "ref", "reorderChildren", "placeChild", "parentNode", "unmount", "applyRef", "tmp", "toChildArray", "out", "nextDom", "sibDom", "outer", "appendChild", "nextSibling", "insertBefore", "diffProps", "dom", "newProps", "oldProps", "hydrate", "setProperty", "setStyle", "style", "value", "IS_NON_DIMENSIONAL", "test", "name", "oldValue", "useCapture", "o", "cssText", "replace", "toLowerCase", "slice", "_listeners", "addEventListener", "eventProxyCapture", "eventProxy", "removeEventListener", "e", "setAttribute", "removeAttribute", "event", "newVNode", "isNew", "oldState", "snapshot", "clearProcessingException", "provider", "componentContext", "renderHook", "count", "newType", "constructor", "contextType", "prototype", "render", "doRender", "sub", "state", "getDerivedStateFromProps", "componentWillMount", "componentDidMount", "componentWillReceiveProps", "shouldComponentUpdate", "forEach", "componentWillUpdate", "componentDidUpdate", "getChildContext", "getSnapshotBeforeUpdate", "diffElementNodes", "diffed", "root", "cb", "call", "oldHtml", "newHtml", "nodeType", "localName", "document", "createTextNode", "createElementNS", "createElement", "is", "data", "childNodes", "dangerouslySetInnerHTML", "attributes", "innerHTML", "removeNode", "checked", "current", "parentVNode", "skipRemove", "r", "componentWillUnmount", "this", "replaceNode", "firstChild", "cloneElement", "vnode", "props", "children", "key", "ref", "i", "normalizedProps", "assign", "arguments", "length", "slice", "call", "createVNode", "type", "slice", "EMPTY_ARR", "options", "error", "vnode", "oldVNode", "errorInfo", "component", "ctor", "handled", "constructor", "getDerivedStateFromError", "setState", "componentDidCatch", "e", "vnodeId", "isValidElement", "Component", "prototype", "update", "callback", "s", "this", "state", "assign", "props", "push", "enqueueRender", "forceUpdate", "render", "Fragment", "rerenderQueue", "process", "i", "ROOT", "currentSignal", "commitError", "pending", "Set", "batchPending", "activating", "oldDeps", "Signal", "value", "_subs", "_deps", "_pending", "_value", "_readonly", "this", "_requiresUpdate", "_canActivate", "_isComputing", "w", "S", "toString", "_proto", "peek", "_setCurrent", "_this", "prevSignal", "prevOldDeps", "shouldUnmark", "shouldCleanup", "forEach", "unmark", "sub", "unsubscribe", "subscribe", "clear", "_updater", "key", "get", "size", "activate", "add", "refreshStale", "set", "Error", "isFirst", "mark", "sweep", "err", "t", "signal", "subs", "to", "from", "dep", "tmpPending", "y", "push", "computed", "compute", "undefined", "finish", "ret", "ROOT", "currentSignal", "Signal", "undefined", "_canActivate", "batch", "computed", "effect", "signal", "p", "hasPendingUpdate", "n", "t", "WeakSet", "hasHookState", "d", "hookName", "_", "options", "c", "v", "updaterForComponent", "WeakMap", "r", "setCurrentUpdater", "updater", "finishUpdate", "currentUpdater", "_setCurrent", "undefined", "s", "_canActivate", "_updater", "getElementUpdater", "vnode", "m", "_props", "length", "signalProps", "e", "f", "dom", "__e", "props", "i", "prop", "value", "setAttribute", "removeAttribute", "set", "child", "arr", "g", "Array", "isArray", "forEach", "childToSignal", "Signal", "createElement", "Text", "data", "_ref", "_this", "this", "useMemo", "__v", "__c", "add", "base", "_value", "b", "o", "useComputed", "compute", "$compute", "current", "hasComputeds", "displayName", "hook", "type", "a", "h", "push", "old", "component", "setState", "oldVNode", "currentComponent", "error", "l", "get", "_deps", "signals", "clear", "index", "prototype", "shouldComponentUpdate", "size", "has", "vnodeId", "createVNode", "type", "props", "key", "__self", "__source", "ref", "i", "normalizedProps", "vnode", "undefined", "constructor", "defaultProps", "options", "RenderCount", "d", "#count", "that", "e", "TodoList", "#items", "S", "#handleKeyUp", "ev", "target", "value", "item", "#removeItem", "id", "items", "index", "For", "App", "#doubleCount", "p", "#showCount", "Show", "Switch", "Match", "P", "unwrapSignal", "val", "c", "renderShow", "child", "key", "when", "fallback", "children", "each", "values", "array", "x", "node", "i", "q", "_value"]
}
